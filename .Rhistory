}
}
return(df)
rm(df)
}
complete("specdata", 1)
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
directory <- "specdata"
dir <- paste(dir, directory, sep = "/")
dir
filelist <- list.files(dir)
id = 1
id <- as.vector(id)
files <- filelist[id]
files
files
na.omit(files)
i <- files
locdir <- paste(dir, i, sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
View(working_data)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Set directory
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
## Selection of files to be pastet together
filelist <- list.files(dir)
id <- as.vector(id)
files <- filelist[id]
## Creating the data set to be evaluated ("working_data")
for (i in files) {
## Setting the local directory to file
locdir <- paste(dir, i, sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
## If the merged dataset does not already exist, create it
if (!exists("df")) {
df <- data.frame(id = id, nobs = ncol(na.omit(working_data)))
}
## If the merged dataset already exists, append to it
else {
df_temp <- data.frame(id = id, nobs = ncol(na.omit(working_data)))
df <- rbind(df, df_temp)
rm(df_temp)
}
rm(working_data)
}
return(df)
rm(df)
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Set directory
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
## Selection of files to be pastet together
filelist <- list.files(dir)
id <- as.vector(id)
## Creating the data set to be evaluated ("working_data")
for (i in id) {
files <- filelist[i]
## Setting the local directory to file
locdir <- paste(dir, i, sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
## If the merged dataset does not already exist, create it
if (!exists("df")) {
df <- data.frame(id = i, nobs = ncol(na.omit(working_data)))
}
## If the merged dataset already exists, append to it
else {
df_temp <- data.frame(id = id, nobs = ncol(na.omit(working_data)))
df <- rbind(df, df_temp)
rm(df_temp)
}
rm(working_data)
}
return(df)
rm(df)
}
complete("specdata", 1)
id <- 1
id <- as.vector(id)
directory <- "specdata"
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
files <- filelist[i]
filelist
filelist <- list.files(dir)
id <- as.vector(id)
filelist
filelist(id)
filelist[id]
i <- id
filelist[i]
locdir <- paste(dir, i, sep = "/")
rm(locdir)
locdir <- paste(dir, filelist[i], sep = "/")
locdir
working_data <- read.table(locdir, header = TRUE, sep = ",")
## If the merged dataset does not already exist, create it
if (!exists("df")) {
df <- data.frame(id = i, nobs = ncol(na.omit(working_data)))
}
## If the merged dataset already exists, append to it
else {
df_temp <- data.frame(id = id, nobs = ncol(na.omit(working_data)))
df <- rbind(df, df_temp)
rm(df_temp)
}
df <- data.frame(id = i, nobs = ncol(na.omit(working_data)))
View(df)
df <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
View(df)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Set directory
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
## Selection of files to be pastet together
filelist <- list.files(dir)
id <- as.vector(id)
## Creating the data set to be evaluated ("working_data")
for (i in id) {
files <- filelist[i]
## Setting the local directory to file
locdir <- paste(dir, filelist[i], sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
## If the merged dataset does not already exist, create it
if (!exists("df")) {
df <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
}
## If the merged dataset already exists, append to it
else {
df_temp <- data.frame(id = id, nobs = nrow(na.omit(working_data)))
df <- rbind(df, df_temp)
rm(df_temp)
}
rm(working_data)
}
return(df)
rm(df)
}
complete("specdata", 1)
id <- 1
directory <- "specdata"
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
## Selection of files to be pastet together
filelist <- list.files(dir)
id <- as.vector(id)
for (i in id) {
files <- filelist[i]
## Setting the local directory to file
locdir <- paste(dir, filelist[i], sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
## If the merged dataset does not already exist, create it
if (!exists("df")) {
df <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
}
## If the merged dataset already exists, append to it
else {
df_temp <- data.frame(id = id, nobs = nrow(na.omit(working_data)))
df <- rbind(df, df_temp)
rm(df_temp)
}
rm(working_data)
}
locdir <- paste(dir, filelist[i], sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
## If the merged dataset does not already exist, create it
if (!exists("df")) {
df <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
}
## If the merged dataset already exists, append to it
else {
df_temp <- data.frame(id = id, nobs = nrow(na.omit(working_data)))
df <- rbind(df, df_temp)
rm(df_temp)
}
df <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
df_temp <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
df <- rbind(df, df_temp)
rm(df_temp)
rm(working_data)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Set directory
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
## Selection of files to be pastet together
filelist <- list.files(dir)
id <- as.vector(id)
## Creating the data set to be evaluated ("working_data")
for (i in id) {
files <- filelist[i]
## Setting the local directory to file
locdir <- paste(dir, filelist[i], sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
## If the merged dataset does not already exist, create it
if (!exists("df")) {
df <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
}
## If the merged dataset already exists, append to it
else {
df_temp <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
df <- rbind(df, df_temp)
rm(df_temp)
}
rm(working_data)
}
return(df)
rm(df)
}
complete("specdata", 1)
directory <- "specdata"
id <- 1
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
## Selection of files to be pastet together
filelist <- list.files(dir)
id <- as.vector(id)
for (i in id) {
files <- filelist[i]
## Setting the local directory to file
locdir <- paste(dir, filelist[i], sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
## If the merged dataset does not already exist, create it
if (!exists("df")) {
df <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
}
## If the merged dataset already exists, append to it
else {
df_temp <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
df <- rbind(df, df_temp)
rm(df_temp)
}
rm(working_data)
}
df <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
exists("df")
rm(df)
exists(df)
exists("df")
rm(df_temp)
exists("df")
help(exists)
exists("data")
rm(df)
exists("dfd")
exists("df")
ls()
is.environment(complete)
is.environment(dir)
basenv()
baseenv()
exists("df", inherits = FALSE)
exists("df", inherits = T)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Set directory
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
## Selection of files to be pastet together
filelist <- list.files(dir)
id <- as.vector(id)
## Creating the data set to be evaluated ("working_data")
for (i in id) {
files <- filelist[i]
## Setting the local directory to file
locdir <- paste(dir, filelist[i], sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
## If the merged dataset does not already exist, create it
if (!exists("df", inherits = FALSE)) {
df <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
}
## If the merged dataset already exists, append to it
else {
df_temp <- data.frame(id = i, nobs = nrow(na.omit(working_data)))
df <- rbind(df, df_temp)
rm(df_temp)
}
rm(working_data)
}
return(df)
rm(df)
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
complete("specdata")
test <- complete("specdata")
View(test)
test1 <- test[,2] > 400
test1
test1 <- test[test[,2]>400]
test1 <- test[test[,2]>400, ]
test1
test1 <- test[test[,2]>400, test[id]]
test1 <- test$id[test[,2]>400, test[id]]
test$id
test[1]
test1 <- test[test[,2]>400, ]
View(test1)
test[[id]]
test[id]
i <- id
i <- "id"
test[i]
test1 <- test[i][test[,2]>400, ]
View(test1)
for (i in test1) print(test1)
for (i in test1) print(i)
View(test)
nobs <- complete("specdata")
test1 <- nobs[1][test[,2]>400, ]
View(test1)
list.files()
list.files(1)
id <- nobs[1][test[,2] > threshold, ]
id <- nobs[1][test[,2] > 500, ]
id
as.vector(id)
directory <- "specdata"
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
dir
filelist <- list.files(dir)
filelist
files <- filelist[id]
files
i
locdir <- paste(dir, files[1], sep = "/")
locdir
working_data_temp <- read.table(locdir, header = TRUE, sep = ",")
View(working_data_temp)
help(cor)
?cor
cor(working_data_temp)
cor(working_data_temp[2], working_data_temp[3])
cor(working_data_temp[2], working_data_temp[3], na.rm = TRUE)
cor(working_data_temp[2], working_data_temp[3], use = "complete.obs")
cor(working_data_temp[2], working_data_temp[3], use = "everything")
test <- cor(working_data_temp[2], working_data_temp[3], use = "everything")
test
summary(test)
test1 <- cor(working_data_temp[2], working_data_temp[3], use = "everything")
c(test, test1)
k <- c(test, test1)
summary(k)
weiter <- c(k, test)
weiter
summary(weiter)
weiter <- c(weiter, test)
weiter
summary(weiter)
head(weiter)
weiter
correlation <- cor(working_data[2], working_data[3], use = "complete.obs")
results <- c(results, correlation)
rm(working_data
)
dir <- "specdata"
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
directory <- "specdata"
dir <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir, directory, sep = "/")
nobs <- complete(dir)
help(complete)
Source(dir)
source(dir)
dir
dir0 <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir0, directory, sep = "/")
source(dir0)
dir0
source("complete.R")
nobs <- complete(dir)
dir
complete(dir)
complete("C:/GIM_JB/Coursera/RProgramming/Assignments/specdata")
nobs <- complete(directory)
id <- nobs[1][test[,2] > threshold, ]
id <- nobs[1][nobs[,2] > threshold, ]
threshold <- 150
id <- nobs[1][nobs[,2] > threshold, ]
id
filelist <- list.files(dir)
id <- as.vector(id)
files <- filelist[id]
files
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
## Set directory
dir0 <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir0, directory, sep = "/")
Source("complete.R")
## Selection of id's of the files to be pasted together
nobs <- complete(directory)
id <- nobs[1][nobs[,2] > threshold, ]
## Selection of files to be pastet together
filelist <- list.files(dir)
id <- as.vector(id)
files <- filelist[id]
results <- c()
## Creating the data set to be evaluated ("working_data")
for (i in files) {
## Setting the local directory to file
locdir <- paste(dir, i, sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
rm(locdir)
correlation <- cor(working_data[2], working_data[3], use = "complete.obs")
results <- c(results, correlation)
rm(working_data)
}
return(results)
rm(results)
}
corr("specdata")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
## Set directory
dir0 <- setwd("C:/GIM_JB/Coursera/RProgramming/Assignments")
dir <- paste(dir0, directory, sep = "/")
source("complete.R")
## Selection of id's of the files to be pasted together
nobs <- complete(directory)
id <- nobs[1][nobs[,2] > threshold, ]
## Selection of files to be pastet together
filelist <- list.files(dir)
id <- as.vector(id)
files <- filelist[id]
results <- c()
## Creating the data set to be evaluated ("working_data")
for (i in files) {
## Setting the local directory to file
locdir <- paste(dir, i, sep = "/")
working_data <- read.table(locdir, header = TRUE, sep = ",")
rm(locdir)
correlation <- cor(working_data[2], working_data[3], use = "complete.obs")
results <- c(results, correlation)
rm(working_data)
}
return(results)
rm(results)
}
corr("specdata")
corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
